from pathlib import Path

import pandas as pd
from joblib import Parallel, delayed


BASE_DIR = Path(__file__).parent.parent.absolute()
COINMETRICS_CSV_PATH = BASE_DIR / "csv"
ALL_COIN_DATA_PATH = BASE_DIR / "all_coin_data" / "all_coin_data.csv"

COLUMN_ORDER = [
    "AdrActCnt",
    "AdrBal1in100KCnt",
    "AdrBal1in100MCnt",
    "AdrBal1in10BCnt",
    "AdrBal1in10KCnt",
    "AdrBal1in10MCnt",
    "AdrBal1in1BCnt",
    "AdrBal1in1KCnt",
    "AdrBal1in1MCnt",
    "AdrBalCnt",
    "AdrBalNtv0.001Cnt",
    "AdrBalNtv0.01Cnt",
    "AdrBalNtv0.1Cnt",
    "AdrBalNtv100Cnt",
    "AdrBalNtv100KCnt",
    "AdrBalNtv10Cnt",
    "AdrBalNtv10KCnt",
    "AdrBalNtv1Cnt",
    "AdrBalNtv1KCnt",
    "AdrBalNtv1MCnt",
    "AdrBalUSD100Cnt",
    "AdrBalUSD100KCnt",
    "AdrBalUSD10Cnt",
    "AdrBalUSD10KCnt",
    "AdrBalUSD10MCnt",
    "AdrBalUSD1Cnt",
    "AdrBalUSD1KCnt",
    "AdrBalUSD1MCnt",
    "AssetCompletionTime",
    "AssetEODCompletionTime",
    "BlkCnt",
    "BlkSizeMeanByte",
    "BlkWghtMean",
    "BlkWghtTot",
    "CapAct1yrUSD",
    "CapMVRVCur",
    "CapMVRVFF",
    "CapMrktCurUSD",
    "CapMrktEstUSD",
    "CapMrktFFUSD",
    "CapRealUSD",
    "DiffLast",
    "DiffMean",
    "FeeByteMeanNtv",
    "FeeMeanNtv",
    "FeeMeanUSD",
    "FeeMedNtv",
    "FeeMedUSD",
    "FeeTotNtv",
    "FeeTotUSD",
    "FlowInExNtv",
    "FlowInExUSD",
    "FlowOutExNtv",
    "FlowOutExUSD",
    "FlowTfrFromExCnt",
    "HashRate",
    "HashRate30d",
    "IssContNtv",
    "IssContPctAnn",
    "IssContPctDay",
    "IssContUSD",
    "IssTotNtv",
    "IssTotUSD",
    "NDF",
    "NVTAdj",
    "NVTAdj90",
    "NVTAdjFF",
    "NVTAdjFF90",
    "PriceBTC",
    "PriceUSD",
    "ROI1yr",
    "ROI30d",
    "ReferenceRate",
    "ReferenceRateBTC",
    "ReferenceRateETH",
    "ReferenceRateEUR",
    "ReferenceRateUSD",
    "RevAllTimeUSD",
    "RevHashNtv",
    "RevHashRateNtv",
    "RevHashRateUSD",
    "RevHashUSD",
    "RevNtv",
    "RevUSD",
    "SER",
    "SplyAct10yr",
    "SplyAct180d",
    "SplyAct1d",
    "SplyAct1yr",
    "SplyAct2yr",
    "SplyAct30d",
    "SplyAct3yr",
    "SplyAct4yr",
    "SplyAct5yr",
    "SplyAct7d",
    "SplyAct90d",
    "SplyActEver",
    "SplyActPct1yr",
    "SplyAdrBal1in100K",
    "SplyAdrBal1in100M",
    "SplyAdrBal1in10B",
    "SplyAdrBal1in10K",
    "SplyAdrBal1in10M",
    "SplyAdrBal1in1B",
    "SplyAdrBal1in1K",
    "SplyAdrBal1in1M",
    "SplyAdrBalNtv0.001",
    "SplyAdrBalNtv0.01",
    "SplyAdrBalNtv0.1",
    "SplyAdrBalNtv1",
    "SplyAdrBalNtv10",
    "SplyAdrBalNtv100",
    "SplyAdrBalNtv100K",
    "SplyAdrBalNtv10K",
    "SplyAdrBalNtv1K",
    "SplyAdrBalNtv1M",
    "SplyAdrBalUSD1",
    "SplyAdrBalUSD10",
    "SplyAdrBalUSD100",
    "SplyAdrBalUSD100K",
    "SplyAdrBalUSD10K",
    "SplyAdrBalUSD10M",
    "SplyAdrBalUSD1K",
    "SplyAdrBalUSD1M",
    "SplyAdrTop100",
    "SplyAdrTop10Pct",
    "SplyAdrTop1Pct",
    "SplyCur",
    "SplyExpFut10yr",
    "SplyFF",
    "SplyMiner0HopAllNtv",
    "SplyMiner0HopAllUSD",
    "SplyMiner1HopAllNtv",
    "SplyMiner1HopAllUSD",
    "TxCnt",
    "TxCntSec",
    "TxTfrCnt",
    "TxTfrValAdjNtv",
    "TxTfrValAdjUSD",
    "TxTfrValMeanNtv",
    "TxTfrValMeanUSD",
    "TxTfrValMedNtv",
    "TxTfrValMedUSD",
    "VelCur1yr",
    "VtyDayRet180d",
    "VtyDayRet30d",
    "principal_market_price_usd",
    "principal_market_usd",
]
COLUMN_ORDER_WITH_TICKER_AND_TIME = ['ticker', 'time'] + COLUMN_ORDER


def get_frame_for_path(path: Path) -> (str, pd.DataFrame):
    ticker = path.name.split(".")[0]
    frame = pd.read_csv(path, low_memory=False).assign(ticker=ticker)
    frame['time'] = pd.to_datetime(frame.time)
    frame.set_index(['ticker', 'time'], inplace=True)
    return ticker, frame


def main():
    paths = COINMETRICS_CSV_PATH.glob('*.csv')
    it = (delayed(get_frame_for_path)(path) for path in paths)
    frame_dict: dict[str, pd.DataFrame] = dict(Parallel(n_jobs=-1)(it))
    appended = pd.concat(frame_dict.values())[COLUMN_ORDER]
    appended.to_csv(ALL_COIN_DATA_PATH)


if __name__ == '__main__':
    main()
